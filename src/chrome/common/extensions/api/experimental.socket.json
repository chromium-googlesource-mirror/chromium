[
  {
    "namespace": "experimental.socket",
    "nodoc": true,
    "types": [
      {
        "id": "SocketEvent",
        "type": "object",
        "description": "A socket event.",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["writeComplete"],
            "description": "A writeComplete event reports the result of a write that blocked."
          },
          "resultCode": {
            "type": "integer",
            "description": "The result code, if the event type is writeComplete.",
            "optional": true
          },
          "isFinalEvent": {
            "type": "boolean",
            "description": "Whether this is the final event that this socket will send.",
            "nodoc": true
          },
          "srcId": {
            "type": "number",
            "description": "An ID unique to the calling function's context so that events can get routed back to the correct callback.",
            "nodoc": true,
            "optional": true
          }
        }
      }
    ],
    "functions": [
      {
        "name": "create",
        "type": "function",
        "description": "Creates a socket of the specified type.",
        "parameters": [
          {
	    "name": "type",
            "type": "string",
            "description":
              "The type of socket to create. Must be <code>udp</code>.",
            "enum": ["udp"]
          },
          {
            "type": "object",
            "name": "options",
            "optional": true,
            "description": "The socket options.",
            "properties": {
              "onEvent": {
                "type": "function",
                "optional": true,
                "description": "This function is called with events that occur during the lifetime of the socket.",
                "parameters": [
                  {
                    "name": "event",
                    "$ref": "SocketEvent",
                    "description": "The socket event."
                  }
                ]
              }
            }
          },
          {
            "name": "callback",
            "type": "function",
            "description": "Called when the socket has been created.",
            "parameters": [
              {
                "type": "object",
                "name": "socketInfo",
                "properties": {
                  "socketId": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "The id of the newly created socket."
                  }
                }
              }
            ]
          }
        ]
      },
      {
        "name": "destroy",
        "type": "function",
        "description": "Destroys the socket. Each socket created should be destroyed after use.",
        "parameters": [
          {
	    "name": "socketId",
            "type": "integer",
            "description": "The socketId.",
	    "minimum": 1
          }
        ]
      },
      {
        "name": "connect",
        "type": "function",
        "description": "Connects the socket to the given address. In the case of a UDP socket, this method merely associates the address with the socket for future sent data.",
        "parameters": [
          {
	    "name": "socketId",
            "type": "integer",
            "description": "The socketId.",
	    "minimum": 1
          },
          {
	    "name": "hostname",
            "type": "string",
            "description": "The remote hostname."
          },
          {
	    "name": "port",
            "type": "integer",
            "description": "The remote port.",
	    "minimum": 1,
	    "maximum": 65535
          },
          {
            "name": "callback",
            "type": "function",
            "description": "Called when the connection is complete.",
            "parameters": [
              {
                "type": "boolean",
                "name": "result",
		"description": "True if successful, false otherwise."
              }
            ]
          }
        ]
      },
      {
        "name": "close",
        "type": "function",
        "description": "Closes the socket.",
        "parameters": [
          {
	    "name": "socketId",
            "type": "integer",
            "description": "The socketId.",
	    "minimum": 1
          }
        ]
      },
      {
        "name": "write",
        "type": "function",
        "description": "Writes data on the connected socket.",
        "parameters": [
          {
	    "name": "socketId",
            "type": "integer",
            "description": "The socketId.",
	    "minimum": 1
          },
          {
	    "name": "data",
            "type": "string",
            "description": "The data to write. Warning: will probably become a blob or other appropriate binary-friendly type."
          },
          {
            "name": "callback",
            "type": "function",
            "description": "Called when any of the following happens: the write operation completes, the write operation blocked before completion, or an error occurred.",
            "parameters": [
              {
                "type": "object",
                "name": "writeInfo",
                "properties": {
                  "bytesWritten": {
                    "type": "integer",
                    "description": "The number of bytes sent, or a negative error code."
                  }
                }
              }
            ]
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onEvent",
        "type": "function",
        "nodoc": true,
        "parameters": [
          {
            "name": "event",
            "$ref": "SocketEvent",
            "description": "The event indicating socket status."
          }
        ],
        "description": "Used to pass events back to the function that called create()."
      }
    ]
  }
]
